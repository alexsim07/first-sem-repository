(*7. [htask-07-seq-N.pas] Дано целое число N (N ≥ 2) и последовательность из N целых чисел, содержащая по крайней мере два нуля. Вывести сумму и количество чисел из данного набора, расположенных между первым и последним нулем (если первый и последний нули идут подряд, то вывести 0).

Пример.

N = 2; 0,  0 >>> 0, 0
N = 4; 2,  0, 0, 4 >>> 0, 0
N = 8; 5, -2, 0, 1,  1, 1, 0, 1 >>> 3, 3
N = 9; 0,  1, 1, 0,  5, 5, 0, 7, 6 >>> 12, 5
N = 9; 0,  1, 1, 0, -2, 3, 0, 7, 6 >>> 3, 5
Замечание. Проверять, что последовательность содержит по крайней мере два нуля, не нужно.

Подсказка. Можно накапливать «текущую сумму» (сумму чисел после последнего обнаруженного нуля), и как только встретится ноль, добавлять её в общую сумму.

Проверьте правильность вашей программы на тестовых наборах входных данных. Проверьте её ещё минимум на четырёх собственных примерах, приведите лог работы программы на этих примерах.*)
begin
  var n := ReadInteger('Введите n: ');
  Assert(n >= 2);
  var firstZeroIndex := -1;
  var lastZeroIndex := -1;
  var totalSum := 0;
  var currentSum := 0;
  var count := -1;
  for var i := 1 to n do
  begin
    var number := ReadInteger('Введите число: ');
    if number = 0 then
    begin
      if firstZeroIndex = -1 then
        firstZeroIndex := i
      else
      begin
        lastZeroIndex := i;
        totalSum := totalSum + currentSum; //Добавляем текущую сумму к общей
        currentSum := 0; //Сбрасываем текущую сумму после нахождения нуля
      end;
    end
    else if firstZeroIndex <> -1 then //Начинаем считать только после первого нуля
    begin
      currentSum := currentSum + number;
      count := count + 1;
    end;
  end;
  //Проверка на подряд стоящие нули
  if (firstZeroIndex <> -1) and (lastZeroIndex <> -1) and (lastZeroIndex = firstZeroIndex + 1) then
    WriteLn(0, ' ', 0)
  else
    WriteLn(totalSum, ' ', count);
end.
(*Введите n:  2
Введите число:  0
Введите число:  0
0 0
*)
(*Введите n:  4
Введите число:  2
Введите число:  0
Введите число:  0
Введите число:  4
0 0
*)
(*Введите число:  1
Введите число:  1
Введите число:  0
Введите число:  1
3 3
*)
(*Введите n:  9
Введите число:  0
Введите число:  1
Введите число:  1
Введите число:  0
Введите число:  5
Введите число:  5
Введите число:  0
Введите число:  7
Введите число:  6
12 5
*)
(*Введите n:  9
Введите число:  0
Введите число:  1
Введите число:  1
Введите число:  0
Введите число:  -2
Введите число:  3
Введите число:  0
Введите число:  7
Введите число:  6
3 5
*)
(*Введите n:  4
Введите число:  3
Введите число:  0
Введите число:  1
Введите число:  0
1 0
*)
(*Введите n:  5
Введите число:  1
Введите число:  1
Введите число:  0
Введите число:  3
Введите число:  2
0 1
*)
(*Введите n:  5
Введите число:  0
Введите число:  2
Введите число:  2
Введите число:  2
Введите число:  0
6 2
*)
(*Введите n:  4
Введите число:  0
Введите число:  9
Введите число:  0
Введите число:  9
9 1
*)